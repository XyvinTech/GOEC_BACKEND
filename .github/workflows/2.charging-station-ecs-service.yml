name: Deploy charging-station Fargate

on:
  push:
    paths:
      - "charging-station-service/**" # Trigger when logs-service code is pushed
    branches:
      - staging

jobs:
  build-and-deploy:
    name: Build and deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      ECS_CLUSTER: OcppFargate
      ECS_SERVICE: charging-station-service
      ECR_REPOSITORY: charging-station-microservice
      IMAGE_TAG: latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

  
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
  
      - name: Build and Push Docker image
        id:  build-and-push-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: charging-station-microservice
          IMAGE_TAG: latest
        run: |
            echo "ECR_REGISTRY: $ECR_REGISTRY"
            echo "ECR_REPOSITORY: $ECR_REPOSITORY"
            echo "IMAGE_TAG: $IMAGE_TAG"
            cd charging-station-service && docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
            echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      
      - name: Deploy to ECS
        run: |
              aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE  --force-new-deployment


